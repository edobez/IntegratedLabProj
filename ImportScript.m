%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: D:\Users\Edoardo\Dropbox\Integrated Design
%    Laboratory\Misurazioni corrente motore DC.xlsx Worksheet: MATLAB
%    export
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2014/11/10 19:07:33

%% Import the data
[~, ~, raw] = xlsread('D:\Users\Edoardo\Dropbox\Integrated Design Laboratory\Misurazioni corrente motore DC.xlsx','MATLAB export','A2:D18');

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create table
misure = table;

%% Allocate imported array to column variable names
misure.setpoint = data(:,1);
misure.shaftSpeedRPM = data(:,2);
misure.shaftSpeed = misure.shaftSpeedRPM*rpm2rad;
misure.rawCurrent = data(:,3);
misure.inCurrentLoop = data(:,4);
misure.armatureCurrent = misure.rawCurrent * -R1/(Rs*R4);
misure.frictionTorque = misure.armatureCurrent * motor.KT;
misure.beta = misure.frictionTorque ./ misure.shaftSpeed;
misure.Properties.VariableUnits = {'V','RPM','rad/s','V','V','A','Nm','Nm/RPM'};

%% Clear temporary variables
clearvars data raw;

%% Plots data
figure;
hold on;

x = misure.shaftSpeedRPM;
y = misure.frictionTorque;
plot(x,y);
title('Shaft speed vs Friction torque');
xlabel('RPM');
ylabel('Nm');
hold off;

figure;
hold on;
x = misure.shaftSpeed;
y = misure.frictionTorque;
p = polyfit(x,y,1);
yfit = polyval(p,[x(1) x(end)]);
betafit = p(1);
coulomb = p(2);
plot(x,y);
title('Shaft speed vs Friction torque');
xlabel('RPM');
ylabel('Nm');
plot([x(1) x(end)],yfit,'--');
text(500,0.015,sprintf('Fitted Beta = %.2g Nm*s/rad',betafit));
text(500,0.0145,sprintf('Coulomb friction = %.2g Nm',coulomb));

figure;
hold on;

plot(misure.shaftSpeed,misure.beta);
title('Shaft speed vs Damping factor');
xlabel('rad/s');
ylabel('Nm*s/rad');

plot([0 500],[betafit betafit])
